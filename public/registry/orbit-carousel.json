{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "orbit-carousel",
  "title": "Orbit Carousel",
  "description": "A minimalistic orbit carousel component designed with React and Tailwind CSS.",
  "author": "Reche Soares",
  "type": "registry:ui",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "cssVars": {
    "dark": {},
    "light": {}
  },
  "files": [
    {
      "path": "orbit-carousel.tsx",
      "content": "\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { Mail, Briefcase, ChevronLeft, ChevronRight } from \"lucide-react\";\r\n\r\n// --- Data: team members ---\r\nconst people = [\r\n  {\r\n    id: 1,\r\n    name: \"Albert Einstein\",\r\n    role: \"Theoretical Physicist\",\r\n    email: \"einstein@example.com\",\r\n    profile:\r\n      \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Albert_Einstein_Head.jpg\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Isaac Newton\",\r\n    role: \"Physicist & Mathematician\",\r\n    email: \"newton@example.com\",\r\n    profile:\r\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f7/Portrait_of_Sir_Isaac_Newton%2C_1689_%28brightened%29.jpg/1200px-Portrait_of_Sir_Isaac_Newton%2C_1689_%28brightened%29.jpg\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Marie Curie\",\r\n    role: \"Physicist & Chemist\",\r\n    email: \"curie@example.com\",\r\n    profile:\r\n      \"https://upload.wikimedia.org/wikipedia/commons/7/7e/Marie_Curie_c1920.jpg\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Nikola Tesla\",\r\n    role: \"Inventor & Engineer\",\r\n    email: \"tesla@example.com\",\r\n    profile: \"https://upload.wikimedia.org/wikipedia/commons/d/d4/N.Tesla.JPG\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Charles Darwin\",\r\n    role: \"Naturalist & Biologist\",\r\n    email: \"darwin@example.com\",\r\n    profile:\r\n      \"https://hips.hearstapps.com/hmg-prod/images/gettyimages-79035252.jpg?crop=1xw:1.0xh;center,top&resize=640:*\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Galileo Galilei\",\r\n    role: \"Astronomer & Physicist\",\r\n    email: \"galileo@example.com\",\r\n    profile:\r\n      \"https://res.cloudinary.com/aenetworks/image/upload/c_fill,ar_2,w_3840,h_1920,g_auto/dpr_auto/f_auto/q_auto:eco/v1/galileo-galilei-gettyimages-51246872?_a=BAVAZGDX0\",\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"Stephen Hawking\",\r\n    role: \"Theoretical Physicist\",\r\n    email: \"hawking@example.com\",\r\n    profile:\r\n      \"https://upload.wikimedia.org/wikipedia/commons/e/eb/Stephen_Hawking.StarChild.jpg\",\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"Richard Feynman\",\r\n    role: \"Theoretical Physicist\",\r\n    email: \"feynman@example.com\",\r\n    profile:\r\n      \"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiz7DeuUmHN7TiT3xf7cV7UPBJNDtEvjNZcgMmNElTmOJYaec6zQI0UiLU04jZP6hqkeLcrnaC5NP4WC_zRQzP3_QhLumNxyzPOsC-WEmWQyYsadq1Eg_V_jEjDfCdddeQgJjY_OOB1KLMj6o2ShA6ycHwM91I430Yr9tkYTn6759jDmcGAsONOACbi/w1200-h630-p-k-no-nu/richard%20feynman%20quotes%20atheism%20religion%20science.png\",\r\n  },\r\n];\r\n\r\n// --- Utility for fallback images ---\r\nconst safeImage = (e: React.SyntheticEvent<HTMLImageElement, Event>) => {\r\n  const target = e.target as HTMLImageElement;\r\n  target.src = \"https://placehold.co/100x100/E0E7FF/4338CA?text=Error\";\r\n};\r\n\r\n// --- Custom hook for mobile detection ---\r\nconst useIsMobile = (breakpoint: number = 768): boolean => {\r\n  const [isMobile, setIsMobile] = React.useState<boolean>(false);\r\n  \r\n  React.useEffect(() => {\r\n    if (typeof window === 'undefined') return;\r\n    const checkScreenSize = (): void => setIsMobile(window.innerWidth < breakpoint);\r\n    \r\n    checkScreenSize();\r\n    window.addEventListener(\"resize\", checkScreenSize);\r\n    return () => window.removeEventListener(\"resize\", checkScreenSize);\r\n  }, [breakpoint]);\r\n  \r\n  return isMobile;\r\n};\r\n\r\n\r\n\r\n// --- Main Component ---\r\nexport default function OrbitCarousel() {\r\n  const [activeIndex, setActiveIndex] = React.useState(0);\r\n  const isMobile = useIsMobile();\r\n\r\n  const containerRadius = isMobile ? 130 : 200;\r\n  const profileSize = isMobile ? 60 : 80;\r\n  const containerSize = containerRadius * 2 + 100;\r\n\r\n  // Calculate rotation for each profile\r\n  const getRotation = React.useCallback(\r\n    (index: number): number => (index - activeIndex) * (360 / people.length),\r\n    [activeIndex]\r\n  );\r\n\r\n  // Navigation\r\n  const next = () => setActiveIndex((i) => (i + 1) % people.length);\r\n  const prev = () => setActiveIndex((i) => (i - 1 + people.length) % people.length);\r\n\r\n  const handleProfileClick = React.useCallback((index: number) => {\r\n    if (index === activeIndex) return;\r\n    setActiveIndex(index);\r\n  }, [activeIndex]);\r\n\r\n  // Keyboard navigation\r\n  React.useEffect(() => {\r\n    const handleKeyDown = (event: KeyboardEvent): void => {\r\n      if (event.key === 'ArrowLeft') prev();\r\n      else if (event.key === 'ArrowRight') next();\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => window.removeEventListener('keydown', handleKeyDown);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center p-4 relative min-h-[400px] bg-white dark:bg-black transition-colors duration-300\">\r\n\r\n      <div\r\n        className=\"relative flex items-center justify-center\"\r\n        style={{ width: containerSize, height: containerSize }}\r\n      >\r\n        {/* Single orbit circle */}\r\n        <div\r\n          className=\"absolute rounded-full border border-gray-300 dark:border-gray-700\"\r\n          style={{\r\n            width: containerRadius * 2,\r\n            height: containerRadius * 2,\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n          }}\r\n        />\r\n\r\n        {/* Active Person Card - Smaller size */}\r\n        <AnimatePresence mode=\"wait\">\r\n          <motion.div\r\n            key={people[activeIndex].id}\r\n            initial={{ opacity: 0, scale: 0.95 }}\r\n            animate={{ opacity: 1, scale: 1 }}\r\n            exit={{ opacity: 0, scale: 0.95 }}\r\n            transition={{ \r\n              duration: 0.3,\r\n              ease: \"easeInOut\"\r\n            }}\r\n            className=\"z-10 bg-white dark:bg-gray-950 backdrop-blur-sm shadow-xl dark:shadow-2xl dark:shadow-gray-900/50 rounded-xl p-3 md:p-4 w-48 md:w-52 text-center border border-gray-100 dark:border-gray-800\"\r\n          >\r\n            <motion.img\r\n              initial={{ opacity: 0, scale: 0.8 }}\r\n              animate={{ opacity: 1, scale: 1 }}\r\n              transition={{ duration: 0.3, delay: 0.1 }}\r\n              src={people[activeIndex].profile}\r\n              alt={people[activeIndex].name}\r\n              onError={safeImage}\r\n              className=\"w-16 h-16 md:w-20 md:h-20 rounded-full mx-auto -mt-10 md:-mt-12 border-4 border-white dark:border-black object-cover shadow-md\"\r\n            />\r\n            <motion.div\r\n              initial={{ opacity: 0, y: 5 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              transition={{ duration: 0.3, delay: 0.15 }}\r\n            >\r\n              <h2 className=\"mt-2 text-base md:text-lg font-bold text-gray-800 dark:text-white\">\r\n                {people[activeIndex].name}\r\n              </h2>\r\n              <div className=\"flex items-center justify-center text-xs md:text-sm text-gray-600 dark:text-gray-400 mt-1\">\r\n                <Briefcase size={12} className=\"mr-1\" /> \r\n                <span className=\"truncate\">{people[activeIndex].role}</span>\r\n              </div>\r\n              <div className=\"flex items-center justify-center text-xs text-gray-500 dark:text-gray-500 mt-0.5\">\r\n                <Mail size={12} className=\"mr-1\" /> \r\n                <span className=\"truncate\">{people[activeIndex].email}</span>\r\n              </div>\r\n            </motion.div>\r\n            <motion.div \r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              transition={{ duration: 0.3, delay: 0.2 }}\r\n              className=\"flex justify-center items-center mt-3 space-x-2\"\r\n            >\r\n              <button\r\n                onClick={prev}\r\n                className=\"p-1.5 rounded-full bg-gray-100 dark:bg-gray-900 hover:bg-gray-200 dark:hover:bg-gray-800 transition-colors\"\r\n              >\r\n                <ChevronLeft size={16} className=\"text-gray-700 dark:text-gray-300\" />\r\n              </button>\r\n              <button className=\"px-4 py-1 text-sm rounded-full bg-indigo-600 text-white hover:bg-indigo-700 dark:bg-indigo-500 dark:hover:bg-indigo-600 transition-colors\">\r\n                Connect\r\n              </button>\r\n              <button\r\n                onClick={next}\r\n                className=\"p-1.5 rounded-full bg-gray-100 dark:bg-gray-900 hover:bg-gray-200 dark:hover:bg-gray-800 transition-colors\"\r\n              >\r\n                <ChevronRight size={16} className=\"text-gray-700 dark:text-gray-300\" />\r\n              </button>\r\n            </motion.div>\r\n          </motion.div>\r\n        </AnimatePresence>\r\n\r\n        {/* Orbiting Profiles with Counter-Rotation */}\r\n        {people.map((p, i) => {\r\n          const rotation = getRotation(i);\r\n          return (\r\n            <motion.div\r\n              key={p.id}\r\n              animate={{\r\n                transform: `rotate(${rotation}deg) translateY(-${containerRadius}px)`,\r\n              }}\r\n              transition={{\r\n                duration: 0.8,\r\n                ease: [0.34, 1.56, 0.64, 1],\r\n              }}\r\n              style={{\r\n                width: profileSize,\r\n                height: profileSize,\r\n                position: \"absolute\",\r\n                top: `calc(50% - ${profileSize / 2}px)`,\r\n                left: `calc(50% - ${profileSize / 2}px)`,\r\n              }}\r\n            >\r\n              {/* Counter-rotation to keep image upright */}\r\n              <motion.div\r\n                animate={{ rotate: -rotation }}\r\n                transition={{\r\n                  duration: 0.8,\r\n                  ease: [0.34, 1.56, 0.64, 1],\r\n                }}\r\n                className=\"w-full h-full\"\r\n              >\r\n                <motion.img\r\n                  src={p.profile}\r\n                  alt={p.name}\r\n                  onError={safeImage}\r\n                  onClick={() => handleProfileClick(i)}\r\n                  whileHover={{ scale: 1.1 }}\r\n                  whileTap={{ scale: 0.95 }}\r\n                  className={`w-full h-full object-cover rounded-full cursor-pointer transition-all duration-300 ${\r\n                    i === activeIndex \r\n                      ? \"border-4 border-indigo-500 dark:border-indigo-400 shadow-lg\" \r\n                      : \"border-2 border-gray-300 dark:border-gray-600 hover:border-indigo-400 dark:hover:border-indigo-500\"\r\n                  }`}\r\n                />\r\n              </motion.div>\r\n            </motion.div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}",
      "type": "registry:ui"
    },
    {
      "path": "orbit-carousel2.tsx",
      "content": "\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { Mail, Briefcase, ChevronLeft, ChevronRight } from \"lucide-react\";\r\n\r\n// --- Data: team members ---\r\nconst people = [\r\n  {\r\n    id: 1,\r\n    name: \"Albert Einstein\",\r\n    role: \"Theoretical Physicist\",\r\n    email: \"einstein@example.com\",\r\n    profile:\r\n      \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Albert_Einstein_Head.jpg\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Isaac Newton\",\r\n    role: \"Physicist & Mathematician\",\r\n    email: \"newton@example.com\",\r\n    profile:\r\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f7/Portrait_of_Sir_Isaac_Newton%2C_1689_%28brightened%29.jpg/1200px-Portrait_of_Sir_Isaac_Newton%2C_1689_%28brightened%29.jpg\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Marie Curie\",\r\n    role: \"Physicist & Chemist\",\r\n    email: \"curie@example.com\",\r\n    profile:\r\n      \"https://upload.wikimedia.org/wikipedia/commons/7/7e/Marie_Curie_c1920.jpg\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Nikola Tesla\",\r\n    role: \"Inventor & Engineer\",\r\n    email: \"tesla@example.com\",\r\n    profile: \"https://upload.wikimedia.org/wikipedia/commons/d/d4/N.Tesla.JPG\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Charles Darwin\",\r\n    role: \"Naturalist & Biologist\",\r\n    email: \"darwin@example.com\",\r\n    profile:\r\n      \"https://hips.hearstapps.com/hmg-prod/images/gettyimages-79035252.jpg?crop=1xw:1.0xh;center,top&resize=640:*\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Galileo Galilei\",\r\n    role: \"Astronomer & Physicist\",\r\n    email: \"galileo@example.com\",\r\n    profile:\r\n      \"https://res.cloudinary.com/aenetworks/image/upload/c_fill,ar_2,w_3840,h_1920,g_auto/dpr_auto/f_auto/q_auto:eco/v1/galileo-galilei-gettyimages-51246872?_a=BAVAZGDX0\",\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"Stephen Hawking\",\r\n    role: \"Theoretical Physicist\",\r\n    email: \"hawking@example.com\",\r\n    profile:\r\n      \"https://upload.wikimedia.org/wikipedia/commons/e/eb/Stephen_Hawking.StarChild.jpg\",\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"Richard Feynman\",\r\n    role: \"Theoretical Physicist\",\r\n    email: \"feynman@example.com\",\r\n    profile:\r\n      \"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiz7DeuUmHN7TiT3xf7cV7UPBJNDtEvjNZcgMmNElTmOJYaec6zQI0UiLU04jZP6hqkeLcrnaC5NP4WC_zRQzP3_QhLumNxyzPOsC-WEmWQyYsadq1Eg_V_jEjDfCdddeQgJjY_OOB1KLMj6o2ShA6ycHwM91I430Yr9tkYTn6759jDmcGAsONOACbi/w1200-h630-p-k-no-nu/richard%20feynman%20quotes%20atheism%20religion%20science.png\",\r\n  },\r\n];\r\n\r\n// --- Utility for fallback images ---\r\nconst safeImage = (e: React.SyntheticEvent<HTMLImageElement, Event>) => {\r\n  const target = e.target as HTMLImageElement;\r\n  target.src = \"https://placehold.co/100x100/E0E7FF/4338CA?text=Error\";\r\n};\r\n\r\n// --- Custom hook for mobile detection ---\r\nconst useIsMobile = (breakpoint: number = 768): boolean => {\r\n  const [isMobile, setIsMobile] = React.useState<boolean>(false);\r\n  \r\n  React.useEffect(() => {\r\n    if (typeof window === 'undefined') return;\r\n    const checkScreenSize = (): void => setIsMobile(window.innerWidth < breakpoint);\r\n    \r\n    checkScreenSize();\r\n    window.addEventListener(\"resize\", checkScreenSize);\r\n    return () => window.removeEventListener(\"resize\", checkScreenSize);\r\n  }, [breakpoint]);\r\n  \r\n  return isMobile;\r\n};\r\n\r\n// --- Main Component ---\r\nexport default function OrbitCarousel() {\r\n  const [activeIndex, setActiveIndex] = React.useState(0);\r\n  const [isHovering, setIsHovering] = React.useState(false);\r\n  const isMobile = useIsMobile();\r\n\r\n  const containerRadius = isMobile ? 130 : 200;\r\n  const profileSize = isMobile ? 60 : 80;\r\n  const containerSize = containerRadius * 2 + 100;\r\n\r\n  // Calculate rotation for each profile\r\n  const getRotation = React.useCallback(\r\n    (index: number): number => (index - activeIndex) * (360 / people.length),\r\n    [activeIndex]\r\n  );\r\n\r\n  // Navigation\r\n  const next = () => setActiveIndex((i) => (i + 1) % people.length);\r\n  const prev = () => setActiveIndex((i) => (i - 1 + people.length) % people.length);\r\n\r\n  const handleProfileClick = React.useCallback((index: number) => {\r\n    if (index === activeIndex) return;\r\n    setActiveIndex(index);\r\n  }, [activeIndex]);\r\n\r\n  // Keyboard navigation\r\n  React.useEffect(() => {\r\n    const handleKeyDown = (event: KeyboardEvent): void => {\r\n      if (event.key === 'ArrowLeft') prev();\r\n      else if (event.key === 'ArrowRight') next();\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => window.removeEventListener('keydown', handleKeyDown);\r\n  }, []);\r\n\r\n  // Auto-rotation\r\n  React.useEffect(() => {\r\n    if (isHovering) return;\r\n    \r\n    const interval = setInterval(() => {\r\n      next();\r\n    }, 5000);\r\n    \r\n    return () => clearInterval(interval);\r\n  }, [isHovering]);\r\n\r\n  return (\r\n    <div \r\n      className=\"flex flex-col items-center p-4 relative min-h-[400px] bg-white dark:bg-black transition-colors duration-300\"\r\n      onMouseEnter={() => setIsHovering(true)}\r\n      onMouseLeave={() => setIsHovering(false)}\r\n    >\r\n\r\n      <div\r\n        className=\"relative flex items-center justify-center\"\r\n        style={{ width: containerSize, height: containerSize }}\r\n      >\r\n\r\n        {/* Active Person Card */}\r\n        <AnimatePresence mode=\"wait\">\r\n          <motion.div\r\n            key={people[activeIndex].id}\r\n            initial={{ opacity: 0, scale: 0.9, y: 20 }}\r\n            animate={{ opacity: 1, scale: 1, y: 0 }}\r\n            exit={{ opacity: 0, scale: 0.9, y: -20 }}\r\n            transition={{ \r\n              type: \"spring\",\r\n              stiffness: 300,\r\n              damping: 25\r\n            }}\r\n            className=\"z-10 bg-white dark:bg-gray-950 backdrop-blur-sm shadow-xl dark:shadow-2xl dark:shadow-gray-900/50 rounded-xl p-3 md:p-4 w-48 md:w-52 text-center border border-gray-100 dark:border-gray-800\"\r\n          >\r\n            <motion.img\r\n              initial={{ opacity: 0, scale: 0.8 }}\r\n              animate={{ opacity: 1, scale: 1 }}\r\n              transition={{ duration: 0.3, delay: 0.1 }}\r\n              src={people[activeIndex].profile}\r\n              alt={people[activeIndex].name}\r\n              onError={safeImage}\r\n              className=\"w-16 h-16 md:w-20 md:h-20 rounded-full mx-auto -mt-10 md:-mt-12 border-4 border-white dark:border-black object-cover shadow-md\"\r\n            />\r\n            <motion.div\r\n              initial={{ opacity: 0, y: 5 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              transition={{ duration: 0.3, delay: 0.15 }}\r\n            >\r\n              <h2 className=\"mt-2 text-base md:text-lg font-bold text-gray-800 dark:text-white\">\r\n                {people[activeIndex].name}\r\n              </h2>\r\n              <div className=\"flex items-center justify-center text-xs md:text-sm text-gray-600 dark:text-gray-400 mt-1\">\r\n                <Briefcase size={12} className=\"mr-1\" /> \r\n                <span className=\"truncate\">{people[activeIndex].role}</span>\r\n              </div>\r\n              <div className=\"flex items-center justify-center text-xs text-gray-500 dark:text-gray-500 mt-0.5\">\r\n                <Mail size={12} className=\"mr-1\" /> \r\n                <span className=\"truncate\">{people[activeIndex].email}</span>\r\n              </div>\r\n            </motion.div>\r\n            <motion.div \r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              transition={{ duration: 0.3, delay: 0.2 }}\r\n              className=\"flex justify-center items-center mt-3 space-x-2\"\r\n            >\r\n              <button\r\n                onClick={prev}\r\n                className=\"p-1.5 rounded-full bg-gray-100 dark:bg-gray-900 hover:bg-gray-200 dark:hover:bg-gray-800 transition-colors\"\r\n              >\r\n                <ChevronLeft size={16} className=\"text-gray-700 dark:text-gray-300\" />\r\n              </button>\r\n              <button className=\"px-4 py-1 text-sm rounded-full bg-indigo-600 text-white hover:bg-indigo-700 dark:bg-indigo-500 dark:hover:bg-indigo-600 transition-colors\">\r\n                Connect\r\n              </button>\r\n              <button\r\n                onClick={next}\r\n                className=\"p-1.5 rounded-full bg-gray-100 dark:bg-gray-900 hover:bg-gray-200 dark:hover:bg-gray-800 transition-colors\"\r\n              >\r\n                <ChevronRight size={16} className=\"text-gray-700 dark:text-gray-300\" />\r\n              </button>\r\n            </motion.div>\r\n          </motion.div>\r\n        </AnimatePresence>\r\n\r\n        {/* Orbiting Profiles with Counter-Rotation */}\r\n        {people.map((p, i) => {\r\n          const rotation = getRotation(i);\r\n          const isActive = i === activeIndex;\r\n          \r\n          return (\r\n            <motion.div\r\n              key={p.id}\r\n              animate={{\r\n                transform: `rotate(${rotation}deg) translateY(-${containerRadius}px)`,\r\n              }}\r\n              transition={{\r\n                type: \"spring\",\r\n                stiffness: 150,\r\n                damping: 20,\r\n                delay: isActive ? 0 : Math.abs(i - activeIndex) * 0.05\r\n              }}\r\n              style={{\r\n                width: profileSize,\r\n                height: profileSize,\r\n                position: \"absolute\",\r\n                top: `calc(50% - ${profileSize / 2}px)`,\r\n                left: `calc(50% - ${profileSize / 2}px)`,\r\n                zIndex: isActive ? 20 : 10,\r\n              }}\r\n            >\r\n              {/* Counter-rotation to keep image upright */}\r\n              <motion.div\r\n                animate={{ rotate: -rotation }}\r\n                transition={{\r\n                  type: \"spring\",\r\n                  stiffness: 150,\r\n                  damping: 20,\r\n                }}\r\n                className=\"w-full h-full\"\r\n              >\r\n                <motion.img\r\n                  src={p.profile}\r\n                  alt={p.name}\r\n                  onError={safeImage}\r\n                  onClick={() => handleProfileClick(i)}\r\n                  whileHover={{ \r\n                    scale: 1.15,\r\n                    boxShadow: \"0 10px 25px -5px rgba(0,0,0,0.1), 0 10px 10px -5px rgba(0,0,0,0.04)\"\r\n                  }}\r\n                  whileTap={{ scale: 0.95 }}\r\n                  className={`w-full h-full object-cover rounded-full cursor-pointer transition-all duration-300 ${\r\n                    isActive \r\n                      ? \"border-4 border-indigo-500 dark:border-indigo-400 shadow-lg\" \r\n                      : \"border-2 border-gray-300 dark:border-gray-600 hover:border-indigo-400 dark:hover:border-indigo-500\"\r\n                  }`}\r\n                />\r\n              </motion.div>\r\n            </motion.div>\r\n          );\r\n        })}\r\n      </div>\r\n      \r\n      {/* Progress Indicator */}\r\n      <div className=\"flex justify-center mt-6 space-x-2\">\r\n        {people.map((_, index) => (\r\n          <motion.button\r\n            key={index}\r\n            onClick={() => setActiveIndex(index)}\r\n            className={`w-2 h-2 rounded-full ${\r\n              index === activeIndex \r\n                ? \"bg-indigo-600 dark:bg-indigo-400\" \r\n                : \"bg-gray-300 dark:bg-gray-600\"\r\n            }`}\r\n            whileHover={{ scale: 1.3 }}\r\n            whileTap={{ scale: 0.9 }}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}",
      "type": "registry:ui"
    }
  ]
}