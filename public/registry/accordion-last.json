{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "accordion-last",
  "title": "Accordion Last",
  "description": "A minimalistic accordion component with last item styling designed with React and Tailwind CSS.",
  "author": "Reche Soares",
  "type": "registry:ui",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "cssVars": {
    "dark": {},
    "light": {}
  },
  "files": [
    {
      "path": "accordion-last.tsx",
      "content": "\"use client\";\r\nimport React, { useState } from \"react\";\r\n\r\n// --- Types ---\r\ninterface AccordionItem {\r\n  question: string;\r\n  answer: string;\r\n}\r\n\r\ninterface AccordionIconProps {\r\n  isOpen: boolean;\r\n}\r\n\r\ninterface AccordionItemProps {\r\n  item: AccordionItem;\r\n  isOpen: boolean;\r\n  onClick: () => void;\r\n}\r\n\r\nconst accordionData: AccordionItem[] = [\r\n  {\r\n    question: \"What is React?\",\r\n    answer:\r\n      \"React is a free and open-source front-end JavaScript library for building user interfaces based on UI components. It is maintained by Meta and a community of individual developers and companies.\",\r\n  },\r\n  {\r\n    question: \"What is Tailwind CSS?\",\r\n    answer:\r\n      \"Tailwind CSS is a utility-first CSS framework packed with classes like flex, pt-4, text-center and rotate-90 that can be composed to build any design, directly in your markup.\",\r\n  },\r\n  {\r\n    question: \"How do they work together?\",\r\n    answer:\r\n      \"React components can be styled using Tailwind classes directly in the JSX, which allows for rapid development and easy maintenance of a consistent design system.\",\r\n  },\r\n  {\r\n    question: \"Is this accordion accessible?\",\r\n    answer:\r\n      \"Yes, basic accessibility is included. The question is a button for proper semantics and keyboard navigation. For more advanced use cases, you could add more ARIA attributes.\",\r\n  },\r\n];\r\n\r\nconst AccordionIcon: React.FC<AccordionIconProps> = ({ isOpen }) => (\r\n  <svg\r\n    className={`w-6 h-6 text-zinc-500 dark:text-zinc-400 transition-transform duration-300 ${isOpen ? \"rotate-180\" : \"\"}`}\r\n    fill=\"none\"\r\n    stroke=\"currentColor\"\r\n    viewBox=\"0 0 24 24\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      strokeWidth={2}\r\n      d=\"M19 9l-7 7-7-7\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nconst AccordionItem: React.FC<AccordionItemProps> = ({\r\n  item,\r\n  isOpen,\r\n  onClick,\r\n}) => {\r\n  return (\r\n    <div className=\"border-b border-zinc-200 dark:border-zinc-700 last:border-b-0\">\r\n      {/* Header part of the accordion item (Question and Icon) */}\r\n      <button\r\n        className=\"w-full flex justify-between items-center text-left py-4 px-5 focus:outline-none focus-visible:ring focus-visible:ring-blue-500 dark:focus-visible:ring-blue-400 focus-visible:ring-opacity-75 hover:bg-zinc-50 dark:hover:bg-zinc-800/50 transition-colors duration-200\"\r\n        onClick={onClick}\r\n        aria-expanded={isOpen}\r\n      >\r\n        <span className=\"text-lg font-medium text-zinc-900 dark:text-zinc-100\">\r\n          {item.question}\r\n        </span>\r\n        <AccordionIcon isOpen={isOpen} />\r\n      </button>\r\n\r\n      <div\r\n        className={`overflow-hidden transition-all duration-300 ease-in-out ${\r\n          isOpen ? \"max-h-screen\" : \"max-h-0\"\r\n        }`}\r\n      >\r\n        <div className=\"p-5 pt-0 text-zinc-600 dark:text-zinc-300\">\r\n          <p>{item.answer}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AccordionLast: React.FC = () => {\r\n  const [openIndex, setOpenIndex] = useState<number | null>(null);\r\n\r\n  const handleItemClick = (index: number) => {\r\n    setOpenIndex(openIndex === index ? null : index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center p-4 bg-zinc-50 dark:bg-zinc-950 \">\r\n      <div className=\"w-full max-w-2xl mx-auto bg-white dark:bg-zinc-900 rounded-2xl shadow-lg dark:shadow-zinc-900/20 border border-zinc-200 dark:border-zinc-800 overflow-hidden\">\r\n        <div className=\"p-6\">\r\n          <h1 className=\"text-2xl font-bold text-center text-zinc-900 dark:text-zinc-100 mb-1\">\r\n            Frequently Asked Questions\r\n          </h1>\r\n          <p className=\"text-center text-zinc-500 dark:text-zinc-400 mb-6\">\r\n            Here are some of our most asked questions.\r\n          </p>\r\n        </div>\r\n        {accordionData.map((item, index) => (\r\n          <AccordionItem\r\n            key={index}\r\n            item={item}\r\n            isOpen={openIndex === index}\r\n            onClick={() => handleItemClick(index)}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccordionLast;\r\n",
      "type": "registry:ui"
    }
  ]
}