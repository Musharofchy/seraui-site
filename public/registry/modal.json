{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "modal",
  "title": "Modal",
  "description": "A minimalistic modal component designed with React and Tailwind CSS.",
  "author": "Reche Soares",
  "type": "registry:ui",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "cssVars": {
    "dark": {},
    "light": {}
  },
  "files": [
    {
      "path": "modal.tsx",
      "content": "import React, { ReactNode, useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\ninterface ModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  children: ReactNode;\r\n  title?: string;\r\n  size?: \"sm\" | \"md\" | \"lg\" | \"xl\";\r\n  animation?: \"scale\" | \"slide\" | \"fade\" | \"bounce\";\r\n}\r\n\r\nconst Modal: React.FC<ModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  children,\r\n  title,\r\n  size = \"md\",\r\n  animation = \"scale\",\r\n}) => {\r\n  // Animation variants based on animation type\r\n  const getModalVariants = (animationType: string) => {\r\n    switch (animationType) {\r\n      case \"scale\":\r\n        return {\r\n          hidden: { opacity: 0, scale: 0.75, y: 20 },\r\n          visible: {\r\n            opacity: 1,\r\n            scale: 1,\r\n            y: 0,\r\n            transition: {\r\n              type: \"spring\" as const,\r\n              damping: 25,\r\n              stiffness: 300,\r\n            },\r\n          },\r\n          exit: {\r\n            opacity: 0,\r\n            scale: 0.75,\r\n            y: 20,\r\n            transition: { duration: 0.2 },\r\n          },\r\n        };\r\n\r\n      case \"slide\":\r\n        return {\r\n          hidden: { opacity: 0, y: -50, scale: 0.95 },\r\n          visible: {\r\n            opacity: 1,\r\n            y: 0,\r\n            scale: 1,\r\n            transition: {\r\n              type: \"spring\" as const,\r\n              damping: 20,\r\n              stiffness: 300,\r\n            },\r\n          },\r\n          exit: {\r\n            opacity: 0,\r\n            y: -30,\r\n            scale: 0.95,\r\n            transition: { duration: 0.2 },\r\n          },\r\n        };\r\n\r\n      case \"fade\":\r\n        return {\r\n          hidden: { opacity: 0 },\r\n          visible: {\r\n            opacity: 1,\r\n            transition: { duration: 0.3, ease: \"easeOut\" as const },\r\n          },\r\n          exit: {\r\n            opacity: 0,\r\n            transition: { duration: 0.2 },\r\n          },\r\n        };\r\n\r\n      case \"bounce\":\r\n        return {\r\n          hidden: { opacity: 0, scale: 0.3, rotate: -10 },\r\n          visible: {\r\n            opacity: 1,\r\n            scale: 1,\r\n            rotate: 0,\r\n            transition: {\r\n              type: \"spring\" as const,\r\n              damping: 15,\r\n              stiffness: 400,\r\n              bounce: 0.6,\r\n            },\r\n          },\r\n          exit: {\r\n            opacity: 0,\r\n            scale: 0.3,\r\n            rotate: 10,\r\n            transition: { duration: 0.2 },\r\n          },\r\n        };\r\n\r\n      default:\r\n        return {\r\n          hidden: { opacity: 0, scale: 0.75, y: 20 },\r\n          visible: {\r\n            opacity: 1,\r\n            scale: 1,\r\n            y: 0,\r\n            transition: {\r\n              type: \"spring\" as const,\r\n              damping: 25,\r\n              stiffness: 300,\r\n            },\r\n          },\r\n          exit: {\r\n            opacity: 0,\r\n            scale: 0.75,\r\n            y: 20,\r\n            transition: { duration: 0.2 },\r\n          },\r\n        };\r\n    }\r\n  };\r\n\r\n  const backdropVariants = {\r\n    hidden: { opacity: 0 },\r\n    visible: { opacity: 1 },\r\n    exit: { opacity: 0 },\r\n  };\r\n\r\n  const modalVariants = getModalVariants(animation);\r\n  // Handle body scroll and pointer events\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      // Store original values\r\n      const originalOverflow = document.body.style.overflow;\r\n      const originalPointerEvents = document.body.style.pointerEvents;\r\n\r\n      // Apply modal styles\r\n      document.body.style.overflow = \"hidden\";\r\n      document.body.style.pointerEvents = \"none\";\r\n\r\n      // Cleanup on modal close or unmount\r\n      return () => {\r\n        document.body.style.overflow = originalOverflow || \"\";\r\n        document.body.style.pointerEvents = originalPointerEvents || \"\";\r\n      };\r\n    }\r\n  }, [isOpen]);\r\n\r\n  // Handle escape key - only when modal is open\r\n  useEffect(() => {\r\n    if (!isOpen) return; // Early return if modal is closed\r\n\r\n    const handleEscape = (event: KeyboardEvent) => {\r\n      if (event.key === \"Escape\") {\r\n        onClose();\r\n      }\r\n    };\r\n\r\n    // Add listener only when modal is open\r\n    document.addEventListener(\"keydown\", handleEscape);\r\n\r\n    // Cleanup when modal closes or component unmounts\r\n    return () => document.removeEventListener(\"keydown\", handleEscape);\r\n  }, [isOpen, onClose]);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  const sizeClasses = {\r\n    sm: \"max-w-md\",\r\n    md: \"max-w-lg\",\r\n    lg: \"max-w-2xl\",\r\n    xl: \"max-w-4xl\",\r\n  };\r\n\r\n  return createPortal(\r\n    <AnimatePresence>\r\n      {isOpen && (\r\n        <motion.div\r\n          className=\"fixed inset-0 z-[9999] flex items-center justify-center pointer-events-auto\"\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n          exit=\"exit\"\r\n          variants={backdropVariants}\r\n          transition={{ duration: 0.2 }}\r\n        >\r\n          {/* Backdrop */}\r\n          <motion.div\r\n            className={cn(\r\n              \"absolute inset-0 backdrop-blur-sm\",\r\n              \"bg-black/50 dark:bg-black/70\"\r\n            )}\r\n            onClick={onClose}\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n          />\r\n\r\n          {/* Modal Content */}\r\n          <motion.div\r\n            className={cn(\r\n              \"relative rounded-lg shadow-xl w-full mx-4 max-h-[90vh] overflow-auto\",\r\n              \"bg-white dark:bg-gray-900\",\r\n              \"border-0 dark:border dark:border-gray-700\",\r\n              sizeClasses[size]\r\n            )}\r\n            variants={modalVariants}\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            exit=\"exit\"\r\n          >\r\n            {title && (\r\n              <div\r\n                className={cn(\r\n                  \"flex items-center justify-between p-4 border-b\",\r\n                  \"border-gray-200 dark:border-gray-700\"\r\n                )}\r\n              >\r\n                <h3\r\n                  className={cn(\r\n                    \"text-lg font-semibold\",\r\n                    \"text-gray-900 dark:text-white\"\r\n                  )}\r\n                >\r\n                  {title}\r\n                </h3>\r\n                <button\r\n                  onClick={onClose}\r\n                  className={cn(\r\n                    \"p-1 rounded-md transition-colors\",\r\n                    \"text-gray-400 hover:text-gray-600\",\r\n                    \"dark:text-gray-400 dark:hover:text-gray-200\",\r\n                    \"hover:bg-gray-100 dark:hover:bg-gray-800\"\r\n                  )}\r\n                >\r\n                  <svg\r\n                    className=\"w-5 h-5\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M6 18L18 6M6 6l12 12\"\r\n                    />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"p-4\">{children}</div>\r\n          </motion.div>\r\n        </motion.div>\r\n      )}\r\n    </AnimatePresence>,\r\n    document.body\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n",
      "type": "registry:ui"
    },
    {
      "path": "animation-modal.tsx",
      "content": "\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport Modal from \"./modal\";\r\nimport Button from \"../button/button\";\r\n\r\nconst AnimationModalView: React.FC = () => {\r\n  const [activeModal, setActiveModal] = useState<string | null>(null);\r\n\r\n  const animations = [\r\n    {\r\n      type: \"scale\" as const,\r\n      name: \"Scale\",\r\n      description: \"Smooth scale-in with spring physics\",\r\n      color: \"bg-blue-500 hover:bg-blue-600\",\r\n    },\r\n    {\r\n      type: \"slide\" as const,\r\n      name: \"Slide\",\r\n      description: \"Slides down from top with gentle bounce\",\r\n      color: \"bg-green-500 hover:bg-green-600\",\r\n    },\r\n    {\r\n      type: \"fade\" as const,\r\n      name: \"Fade\",\r\n      description: \"Simple fade-in animation\",\r\n      color: \"bg-purple-500 hover:bg-purple-600\",\r\n    },\r\n    {\r\n      type: \"bounce\" as const,\r\n      name: \"Bounce\",\r\n      description: \"Playful bounce with rotation\",\r\n      color: \"bg-orange-500 hover:bg-orange-600\",\r\n    },\r\n  ];\r\n\r\n  const openModal = (type: string) => {\r\n    setActiveModal(type);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setActiveModal(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n        {animations.map((animation) => (\r\n          <div key={animation.type} className=\"space-y-2\">\r\n            <Button\r\n              onClick={() => openModal(animation.type)}\r\n              className=\"w-full\"\r\n              variant=\"default\"\r\n              size=\"default\"\r\n            >\r\n              {animation.name} Animation\r\n            </Button>\r\n            <p className=\"text-sm text-gray-600 dark:text-gray-400 text-center\">\r\n              {animation.description}\r\n            </p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Scale Animation Modal */}\r\n      <Modal\r\n        isOpen={activeModal === \"scale\"}\r\n        onClose={closeModal}\r\n        title={`${animations[0].name} Animation`}\r\n        animation=\"scale\"\r\n        size=\"md\"\r\n      >\r\n        <div className=\"space-y-4\">\r\n          <p className=\"text-gray-700 dark:text-gray-300\">\r\n            This modal uses the <strong>scale</strong> animation with spring\r\n            physics. It scales from 75% to 100% with a gentle bounce effect and\r\n            moves up slightly during the entrance.\r\n          </p>\r\n          <div className=\"bg-blue-50 dark:bg-blue-900/20 p-4 rounded-lg border border-blue-200 dark:border-blue-800\">\r\n            <h4 className=\"font-medium text-blue-800 dark:text-blue-200 mb-2\">\r\n              Animation Properties:\r\n            </h4>\r\n            <ul className=\"text-sm text-blue-700 dark:text-blue-300 space-y-1\">\r\n              <li>• Scale: 0.75 → 1.0</li>\r\n              <li>• Y movement: 20px up</li>\r\n              <li>• Spring damping: 25</li>\r\n              <li>• Spring stiffness: 300</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n\r\n      {/* Slide Animation Modal */}\r\n      <Modal\r\n        isOpen={activeModal === \"slide\"}\r\n        onClose={closeModal}\r\n        title={`${animations[1].name} Animation`}\r\n        animation=\"slide\"\r\n        size=\"md\"\r\n      >\r\n        <div className=\"space-y-4\">\r\n          <p className=\"text-gray-700 dark:text-gray-300\">\r\n            This modal uses the <strong>slide</strong> animation. It slides down\r\n            from above the viewport with a spring effect and slight scaling.\r\n          </p>\r\n          <div className=\"bg-green-50 dark:bg-green-900/20 p-4 rounded-lg border border-green-200 dark:border-green-800\">\r\n            <h4 className=\"font-medium text-green-800 dark:text-green-200 mb-2\">\r\n              Animation Properties:\r\n            </h4>\r\n            <ul className=\"text-sm text-green-700 dark:text-green-300 space-y-1\">\r\n              <li>• Y movement: -50px → 0px</li>\r\n              <li>• Scale: 0.95 → 1.0</li>\r\n              <li>• Spring damping: 20</li>\r\n              <li>• Spring stiffness: 300</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n\r\n      {/* Fade Animation Modal */}\r\n      <Modal\r\n        isOpen={activeModal === \"fade\"}\r\n        onClose={closeModal}\r\n        title={`${animations[2].name} Animation`}\r\n        animation=\"fade\"\r\n        size=\"md\"\r\n      >\r\n        <div className=\"space-y-4\">\r\n          <p className=\"text-gray-700 dark:text-gray-300\">\r\n            This modal uses the <strong>fade</strong> animation. It&apos;s a\r\n            simple, elegant opacity transition without any scaling or movement.\r\n          </p>\r\n          <div className=\"bg-purple-50 dark:bg-purple-900/20 p-4 rounded-lg border border-purple-200 dark:border-purple-800\">\r\n            <h4 className=\"font-medium text-purple-800 dark:text-purple-200 mb-2\">\r\n              Animation Properties:\r\n            </h4>\r\n            <ul className=\"text-sm text-purple-700 dark:text-purple-300 space-y-1\">\r\n              <li>• Opacity: 0 → 1</li>\r\n              <li>• Duration: 0.3s</li>\r\n              <li>• Easing: easeOut</li>\r\n              <li>• No scaling or movement</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n\r\n      {/* Bounce Animation Modal */}\r\n      <Modal\r\n        isOpen={activeModal === \"bounce\"}\r\n        onClose={closeModal}\r\n        title={`${animations[3].name} Animation`}\r\n        animation=\"bounce\"\r\n        size=\"md\"\r\n      >\r\n        <div className=\"space-y-4\">\r\n          <p className=\"text-gray-700 dark:text-gray-300\">\r\n            This modal uses the <strong>bounce</strong> animation. It&apos;s a\r\n            playful entrance with rotation, scaling, and enhanced bounce effect.\r\n          </p>\r\n          <div className=\"bg-orange-50 dark:bg-orange-900/20 p-4 rounded-lg border border-orange-200 dark:border-orange-800\">\r\n            <h4 className=\"font-medium text-orange-800 dark:text-orange-200 mb-2\">\r\n              Animation Properties:\r\n            </h4>\r\n            <ul className=\"text-sm text-orange-700 dark:text-orange-300 space-y-1\">\r\n              <li>• Scale: 0.3 → 1.0</li>\r\n              <li>• Rotation: -10° → 0°</li>\r\n              <li>• Spring damping: 15</li>\r\n              <li>• Spring stiffness: 400</li>\r\n              <li>• Bounce: 0.6</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnimationModalView;\r\n",
      "type": "registry:ui"
    },
    {
      "path": "basic-modal.tsx",
      "content": "\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport Modal from \"./modal\";\r\nimport Button from \"../button/button\";\r\n\r\nconst BasicModalView: React.FC = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <Button onClick={() => setIsOpen(true)} variant=\"default\">\r\n        Open Basic Modal\r\n      </Button>\r\n\r\n      <Modal\r\n        isOpen={isOpen}\r\n        onClose={() => setIsOpen(false)}\r\n        title=\"Basic Modal\"\r\n      >\r\n        <div className=\"space-y-4\">\r\n          <p className=\"text-gray-700 dark:text-gray-300\">\r\n            This is a basic modal example. You can put any content here. The\r\n            modal will close when you click the X button, press ESC, or click\r\n            outside the modal.\r\n          </p>\r\n          <div className=\"flex justify-end\">\r\n            <Button onClick={() => setIsOpen(false)} variant=\"secondary\">\r\n              Close\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BasicModalView;\r\n",
      "type": "registry:ui"
    },
    {
      "path": "confirmation-modal.tsx",
      "content": "\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport Modal from \"./modal\";\r\nimport Button from \"../button/button\";\r\n\r\nconst ConfirmationModalView: React.FC = () => {\r\n  const [isDeleteOpen, setIsDeleteOpen] = useState(false);\r\n  const [isLogoutOpen, setIsLogoutOpen] = useState(false);\r\n  const [isResetOpen, setIsResetOpen] = useState(false);\r\n\r\n  const handleDelete = () => {\r\n    // Handle delete action\r\n    alert(\"Item deleted successfully!\");\r\n    setIsDeleteOpen(false);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    // Handle logout action\r\n    alert(\"Logged out successfully!\");\r\n    setIsLogoutOpen(false);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    // Handle reset action\r\n    alert(\"Settings reset to default!\");\r\n    setIsResetOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <div className=\"flex flex-wrap gap-3\">\r\n        <Button onClick={() => setIsDeleteOpen(true)} variant=\"destructive\">\r\n          Delete Item\r\n        </Button>\r\n        <Button\r\n          onClick={() => setIsLogoutOpen(true)}\r\n          variant=\"default\"\r\n          className=\"bg-orange-500 hover:bg-orange-600\"\r\n        >\r\n          Logout\r\n        </Button>\r\n        <Button\r\n          onClick={() => setIsResetOpen(true)}\r\n          variant=\"default\"\r\n          className=\"bg-yellow-500 hover:bg-yellow-600\"\r\n        >\r\n          Reset Settings\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Delete Confirmation Modal */}\r\n      <Modal\r\n        isOpen={isDeleteOpen}\r\n        onClose={() => setIsDeleteOpen(false)}\r\n        title=\"Delete Item\"\r\n        size=\"sm\"\r\n      >\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <div className=\"flex-shrink-0\">\r\n              <svg\r\n                className=\"h-10 w-10 text-red-500\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                strokeWidth=\"1.5\"\r\n                stroke=\"currentColor\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  d=\"M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z\"\r\n                />\r\n              </svg>\r\n            </div>\r\n            <div>\r\n              <h3 className=\"text-lg font-medium text-gray-900 dark:text-gray-100\">\r\n                Are you sure?\r\n              </h3>\r\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                This action cannot be undone. This will permanently delete the\r\n                item and remove all associated data.\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-md p-3\">\r\n            <div className=\"flex\">\r\n              <div className=\"flex-shrink-0\">\r\n                <svg\r\n                  className=\"h-5 w-5 text-red-400\"\r\n                  viewBox=\"0 0 20 20\"\r\n                  fill=\"currentColor\"\r\n                >\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.28 7.22a.75.75 0 00-1.06 1.06L8.94 10l-1.72 1.72a.75.75 0 101.06 1.06L10 11.06l1.72 1.72a.75.75 0 101.06-1.06L11.06 10l1.72-1.72a.75.75 0 00-1.06-1.06L10 8.94 8.28 7.22z\"\r\n                    clipRule=\"evenodd\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n              <div className=\"ml-3\">\r\n                <p className=\"text-sm text-red-700 dark:text-red-300\">\r\n                  <strong>Warning:</strong> This is a destructive action that\r\n                  cannot be reversed.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex justify-end space-x-3\">\r\n            <Button onClick={() => setIsDeleteOpen(false)} variant=\"secondary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleDelete} variant=\"destructive\">\r\n              Delete\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n\r\n      {/* Logout Confirmation Modal */}\r\n      <Modal\r\n        isOpen={isLogoutOpen}\r\n        onClose={() => setIsLogoutOpen(false)}\r\n        title=\"Confirm Logout\"\r\n        size=\"sm\"\r\n      >\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <div className=\"flex-shrink-0\">\r\n              <svg\r\n                className=\"h-10 w-10 text-orange-500\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                strokeWidth=\"1.5\"\r\n                stroke=\"currentColor\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  d=\"M15.75 9V5.25A2.25 2.25 0 0013.5 3h-6a2.25 2.25 0 00-2.25 2.25v13.5A2.25 2.25 0 007.5 21h6a2.25 2.25 0 002.25-2.25V15M12 9l-3 3m0 0l3 3m-3-3h12.75\"\r\n                />\r\n              </svg>\r\n            </div>\r\n            <div>\r\n              <h3 className=\"text-lg font-medium text-gray-900 dark:text-gray-100\">\r\n                Logout Confirmation\r\n              </h3>\r\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                Are you sure you want to logout? You will need to sign in again\r\n                to access your account.\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-orange-50 dark:bg-orange-900/20 border border-orange-200 dark:border-orange-800 rounded-md p-3\">\r\n            <p className=\"text-sm text-orange-700 dark:text-orange-300\">\r\n              Any unsaved changes will be lost. Make sure to save your work\r\n              before logging out.\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"flex justify-end space-x-3\">\r\n            <Button onClick={() => setIsLogoutOpen(false)} variant=\"secondary\">\r\n              Stay Logged In\r\n            </Button>\r\n            <Button\r\n              onClick={handleLogout}\r\n              variant=\"default\"\r\n              className=\"bg-orange-500 hover:bg-orange-600\"\r\n            >\r\n              Logout\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n\r\n      {/* Reset Settings Confirmation Modal */}\r\n      <Modal\r\n        isOpen={isResetOpen}\r\n        onClose={() => setIsResetOpen(false)}\r\n        title=\"Reset Settings\"\r\n        size=\"md\"\r\n      >\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex items-start space-x-3\">\r\n            <div className=\"flex-shrink-0\">\r\n              <svg\r\n                className=\"h-10 w-10 text-yellow-500\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                strokeWidth=\"1.5\"\r\n                stroke=\"currentColor\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  d=\"M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0l3.181 3.183a8.25 8.25 0 0013.803-3.7M4.031 9.865a8.25 8.25 0 0113.803-3.7l3.181 3.182m0-4.991v4.99\"\r\n                />\r\n              </svg>\r\n            </div>\r\n            <div>\r\n              <h3 className=\"text-lg font-medium text-gray-900 dark:text-gray-100\">\r\n                Reset All Settings\r\n              </h3>\r\n              <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\r\n                This will restore all settings to their default values. Your\r\n                personal data and files will not be affected.\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-md p-4\">\r\n            <h4 className=\"text-sm font-medium text-yellow-800 dark:text-yellow-200 mb-2\">\r\n              The following will be reset:\r\n            </h4>\r\n            <ul className=\"text-sm text-yellow-700 dark:text-yellow-300 space-y-1\">\r\n              <li>• Theme preferences</li>\r\n              <li>• Notification settings</li>\r\n              <li>• Display options</li>\r\n              <li>• Privacy settings</li>\r\n              <li>• Keyboard shortcuts</li>\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"flex justify-end space-x-3\">\r\n            <Button onClick={() => setIsResetOpen(false)} variant=\"secondary\">\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={handleReset}\r\n              variant=\"default\"\r\n              className=\"bg-yellow-500 hover:bg-yellow-600\"\r\n            >\r\n              Reset Settings\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmationModalView;\r\n",
      "type": "registry:ui"
    },
    {
      "path": "form-modal.tsx",
      "content": "\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport Modal from \"./modal\";\r\nimport Button from \"../button/button\";\r\n\r\nconst FormModalView: React.FC = () => {\r\n  const [isContactOpen, setIsContactOpen] = useState(false);\r\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\r\n\r\n  const handleContactSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    // Handle form submission\r\n    alert(\"Contact form submitted!\");\r\n    setIsContactOpen(false);\r\n  };\r\n\r\n  const handleSettingsSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    // Handle settings save\r\n    alert(\"Settings saved!\");\r\n    setIsSettingsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <div className=\"flex flex-wrap gap-3\">\r\n        <Button onClick={() => setIsContactOpen(true)} variant=\"default\">\r\n          Contact Form Modal\r\n        </Button>\r\n        <Button\r\n          onClick={() => setIsSettingsOpen(true)}\r\n          variant=\"default\"\r\n          className=\"bg-purple-500 hover:bg-purple-600\"\r\n        >\r\n          Settings Form Modal\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Contact Form Modal */}\r\n      <Modal\r\n        isOpen={isContactOpen}\r\n        onClose={() => setIsContactOpen(false)}\r\n        title=\"Contact Us\"\r\n        size=\"lg\"\r\n      >\r\n        <form onSubmit={handleContactSubmit} className=\"space-y-4\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div>\r\n              <label\r\n                htmlFor=\"firstName\"\r\n                className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\"\r\n              >\r\n                First Name *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"firstName\"\r\n                required\r\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-gray-100\"\r\n                placeholder=\"Enter your first name\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label\r\n                htmlFor=\"lastName\"\r\n                className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\"\r\n              >\r\n                Last Name *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"lastName\"\r\n                required\r\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-gray-100\"\r\n                placeholder=\"Enter your last name\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label\r\n              htmlFor=\"email\"\r\n              className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\"\r\n            >\r\n              Email Address *\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              required\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-gray-100\"\r\n              placeholder=\"your.email@example.com\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label\r\n              htmlFor=\"subject\"\r\n              className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\"\r\n            >\r\n              Subject *\r\n            </label>\r\n            <select\r\n              id=\"subject\"\r\n              required\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-gray-100\"\r\n            >\r\n              <option value=\"\">Select a subject</option>\r\n              <option value=\"general\">General Inquiry</option>\r\n              <option value=\"support\">Technical Support</option>\r\n              <option value=\"billing\">Billing Question</option>\r\n              <option value=\"feedback\">Feedback</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <label\r\n              htmlFor=\"message\"\r\n              className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\"\r\n            >\r\n              Message *\r\n            </label>\r\n            <textarea\r\n              id=\"message\"\r\n              rows={4}\r\n              required\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-gray-100 resize-none\"\r\n              placeholder=\"Please describe your inquiry...\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"flex items-center\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"newsletter\"\r\n              className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\r\n            />\r\n            <label\r\n              htmlFor=\"newsletter\"\r\n              className=\"ml-2 block text-sm text-gray-700 dark:text-gray-300\"\r\n            >\r\n              Subscribe to our newsletter for updates\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"flex justify-end space-x-3 pt-4 border-t border-gray-200 dark:border-gray-700\">\r\n            <Button\r\n              type=\"button\"\r\n              onClick={() => setIsContactOpen(false)}\r\n              variant=\"secondary\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button type=\"submit\" variant=\"default\">\r\n              Send Message\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Modal>\r\n\r\n      {/* Settings Form Modal */}\r\n      <Modal\r\n        isOpen={isSettingsOpen}\r\n        onClose={() => setIsSettingsOpen(false)}\r\n        title=\"User Settings\"\r\n        size=\"lg\"\r\n      >\r\n        <form onSubmit={handleSettingsSubmit} className=\"space-y-6\">\r\n          {/* Profile Section */}\r\n          <div>\r\n            <h3 className=\"text-lg font-medium text-gray-800 dark:text-gray-200 mb-4\">\r\n              Profile Settings\r\n            </h3>\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <label\r\n                  htmlFor=\"displayName\"\r\n                  className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\"\r\n                >\r\n                  Display Name\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"displayName\"\r\n                  defaultValue=\"John Doe\"\r\n                  className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500 dark:bg-gray-700 dark:text-gray-100\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label\r\n                  htmlFor=\"bio\"\r\n                  className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\"\r\n                >\r\n                  Bio\r\n                </label>\r\n                <textarea\r\n                  id=\"bio\"\r\n                  rows={3}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500 dark:bg-gray-700 dark:text-gray-100 resize-none\"\r\n                  placeholder=\"Tell us about yourself...\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Notification Section */}\r\n          <div className=\"border-t border-gray-200 dark:border-gray-700 pt-6\">\r\n            <h3 className=\"text-lg font-medium text-gray-800 dark:text-gray-200 mb-4\">\r\n              Notification Preferences\r\n            </h3>\r\n            <div className=\"space-y-3\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"emailNotifications\"\r\n                    className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\"\r\n                  >\r\n                    Email Notifications\r\n                  </label>\r\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                    Receive updates via email\r\n                  </p>\r\n                </div>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"emailNotifications\"\r\n                  defaultChecked\r\n                  className=\"h-4 w-4 text-purple-600 focus:ring-purple-500 border-gray-300 rounded\"\r\n                />\r\n              </div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"pushNotifications\"\r\n                    className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\"\r\n                  >\r\n                    Push Notifications\r\n                  </label>\r\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                    Receive browser notifications\r\n                  </p>\r\n                </div>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"pushNotifications\"\r\n                  className=\"h-4 w-4 text-purple-600 focus:ring-purple-500 border-gray-300 rounded\"\r\n                />\r\n              </div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"marketingEmails\"\r\n                    className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\"\r\n                  >\r\n                    Marketing Emails\r\n                  </label>\r\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                    Receive promotional content\r\n                  </p>\r\n                </div>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"marketingEmails\"\r\n                  className=\"h-4 w-4 text-purple-600 focus:ring-purple-500 border-gray-300 rounded\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Privacy Section */}\r\n          <div className=\"border-t border-gray-200 dark:border-gray-700 pt-6\">\r\n            <h3 className=\"text-lg font-medium text-gray-800 dark:text-gray-200 mb-4\">\r\n              Privacy Settings\r\n            </h3>\r\n            <div>\r\n              <label\r\n                htmlFor=\"profileVisibility\"\r\n                className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\"\r\n              >\r\n                Profile Visibility\r\n              </label>\r\n              <select\r\n                id=\"profileVisibility\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500 dark:bg-gray-700 dark:text-gray-100\"\r\n              >\r\n                <option value=\"public\">Public</option>\r\n                <option value=\"friends\">Friends Only</option>\r\n                <option value=\"private\">Private</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex justify-end space-x-3 pt-4 border-t border-gray-200 dark:border-gray-700\">\r\n            <Button\r\n              type=\"button\"\r\n              onClick={() => setIsSettingsOpen(false)}\r\n              variant=\"secondary\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"default\"\r\n              className=\"bg-purple-500 hover:bg-purple-600\"\r\n            >\r\n              Save Settings\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormModalView;\r\n",
      "type": "registry:ui"
    },
    {
      "path": "size-variants.tsx",
      "content": "\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport Modal from \"./modal\";\r\nimport Button from \"../button/button\";\r\n\r\nconst SizeVariantsView: React.FC = () => {\r\n  const [isSmallOpen, setIsSmallOpen] = useState(false);\r\n  const [isMediumOpen, setIsMediumOpen] = useState(false);\r\n  const [isLargeOpen, setIsLargeOpen] = useState(false);\r\n  const [isXLOpen, setIsXLOpen] = useState(false);\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <div className=\"flex flex-wrap gap-3\">\r\n        <Button\r\n          onClick={() => setIsSmallOpen(true)}\r\n          variant=\"default\"\r\n          className=\"bg-green-500 hover:bg-green-600\"\r\n        >\r\n          Small Modal\r\n        </Button>\r\n        <Button onClick={() => setIsMediumOpen(true)} variant=\"default\">\r\n          Medium Modal\r\n        </Button>\r\n        <Button\r\n          onClick={() => setIsLargeOpen(true)}\r\n          variant=\"default\"\r\n          className=\"bg-purple-500 hover:bg-purple-600\"\r\n        >\r\n          Large Modal\r\n        </Button>\r\n        <Button\r\n          onClick={() => setIsXLOpen(true)}\r\n          variant=\"default\"\r\n          className=\"bg-indigo-500 hover:bg-indigo-600\"\r\n        >\r\n          Extra Large Modal\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Small Modal */}\r\n      <Modal\r\n        isOpen={isSmallOpen}\r\n        onClose={() => setIsSmallOpen(false)}\r\n        title=\"Small Modal (sm)\"\r\n        size=\"sm\"\r\n      >\r\n        <div className=\"space-y-4\">\r\n          <p className=\"text-gray-700 dark:text-gray-300\">\r\n            Perfect for confirmations and simple alerts. Max width: 448px\r\n            (28rem).\r\n          </p>\r\n          <div className=\"flex justify-end space-x-2\">\r\n            <Button\r\n              onClick={() => setIsSmallOpen(false)}\r\n              variant=\"secondary\"\r\n              size=\"sm\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={() => setIsSmallOpen(false)}\r\n              variant=\"default\"\r\n              className=\"bg-green-500 hover:bg-green-600\"\r\n              size=\"sm\"\r\n            >\r\n              Confirm\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n\r\n      {/* Medium Modal */}\r\n      <Modal\r\n        isOpen={isMediumOpen}\r\n        onClose={() => setIsMediumOpen(false)}\r\n        title=\"Medium Modal (md)\"\r\n        size=\"md\"\r\n      >\r\n        <div className=\"space-y-4\">\r\n          <p className=\"text-gray-700 dark:text-gray-300\">\r\n            Default size, good for most content. Max width: 512px (32rem).\r\n          </p>\r\n          <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg\">\r\n            <h4 className=\"font-medium mb-2 text-gray-800 dark:text-gray-200\">\r\n              Sample Content\r\n            </h4>\r\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n              This is the standard modal size that works well for most use cases\r\n              including forms, notifications, and general content.\r\n            </p>\r\n          </div>\r\n          <div className=\"flex justify-end\">\r\n            <Button onClick={() => setIsMediumOpen(false)} variant=\"default\">\r\n              Got it\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n\r\n      {/* Large Modal */}\r\n      <Modal\r\n        isOpen={isLargeOpen}\r\n        onClose={() => setIsLargeOpen(false)}\r\n        title=\"Large Modal (lg)\"\r\n        size=\"lg\"\r\n      >\r\n        <div className=\"space-y-6\">\r\n          <p className=\"text-gray-700 dark:text-gray-300\">\r\n            Great for detailed information and forms. Max width: 672px (42rem).\r\n          </p>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg\">\r\n              <h3 className=\"font-semibold mb-2 text-gray-800 dark:text-gray-200\">\r\n                Feature 1\r\n              </h3>\r\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                Large modals provide more space for complex layouts and detailed\r\n                information.\r\n              </p>\r\n            </div>\r\n            <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg\">\r\n              <h3 className=\"font-semibold mb-2 text-gray-800 dark:text-gray-200\">\r\n                Feature 2\r\n              </h3>\r\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                Perfect for multi-column layouts and comprehensive forms.\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex justify-end\">\r\n            <Button\r\n              onClick={() => setIsLargeOpen(false)}\r\n              variant=\"default\"\r\n              className=\"bg-purple-500 hover:bg-purple-600\"\r\n            >\r\n              Close\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n\r\n      {/* Extra Large Modal */}\r\n      <Modal\r\n        isOpen={isXLOpen}\r\n        onClose={() => setIsXLOpen(false)}\r\n        title=\"Extra Large Modal (xl)\"\r\n        size=\"xl\"\r\n      >\r\n        <div className=\"space-y-6\">\r\n          <p className=\"text-gray-700 dark:text-gray-300\">\r\n            Best for complex layouts and extensive content. Max width: 896px\r\n            (56rem).\r\n          </p>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            {[1, 2, 3, 4, 5, 6].map((item) => (\r\n              <div\r\n                key={item}\r\n                className=\"bg-gradient-to-br from-blue-50 to-indigo-50 dark:from-blue-900/20 dark:to-indigo-900/20 p-4 rounded-lg border border-gray-200 dark:border-gray-700\"\r\n              >\r\n                <h4 className=\"font-medium mb-2 text-gray-800 dark:text-gray-200\">\r\n                  Item {item}\r\n                </h4>\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                  Extra large modals can accommodate extensive content and\r\n                  complex data presentations.\r\n                </p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"flex justify-end\">\r\n            <Button\r\n              onClick={() => setIsXLOpen(false)}\r\n              variant=\"default\"\r\n              className=\"bg-indigo-500 hover:bg-indigo-600\"\r\n            >\r\n              Close\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SizeVariantsView;\r\n",
      "type": "registry:ui"
    },
    {
      "path": "success-modal.tsx",
      "content": "\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport Modal from \"./modal\";\r\nimport Button from \"../button/button\";\r\n\r\nconst SuccessModalView: React.FC = () => {\r\n  const [isSuccessOpen, setIsSuccessOpen] = useState(false);\r\n  const [isCompletionOpen, setIsCompletionOpen] = useState(false);\r\n  const [isAchievementOpen, setIsAchievementOpen] = useState(false);\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <div className=\"flex flex-wrap gap-3\">\r\n        <Button\r\n          onClick={() => setIsSuccessOpen(true)}\r\n          variant=\"default\"\r\n          className=\"bg-green-500 hover:bg-green-600\"\r\n        >\r\n          Success Message\r\n        </Button>\r\n        <Button onClick={() => setIsCompletionOpen(true)} variant=\"default\">\r\n          Task Completion\r\n        </Button>\r\n        <Button\r\n          onClick={() => setIsAchievementOpen(true)}\r\n          variant=\"default\"\r\n          className=\"bg-purple-500 hover:bg-purple-600\"\r\n        >\r\n          Achievement Unlocked\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Success Message Modal (No Title) */}\r\n      <Modal\r\n        isOpen={isSuccessOpen}\r\n        onClose={() => setIsSuccessOpen(false)}\r\n        size=\"sm\"\r\n      >\r\n        <div className=\"text-center space-y-4\">\r\n          <div className=\"mx-auto flex items-center justify-center h-16 w-16 rounded-full bg-green-100 dark:bg-green-900/30\">\r\n            <svg\r\n              className=\"h-8 w-8 text-green-600 dark:text-green-400\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              strokeWidth=\"2\"\r\n              stroke=\"currentColor\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                d=\"M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n              />\r\n            </svg>\r\n          </div>\r\n\r\n          <div>\r\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n              Success!\r\n            </h3>\r\n            <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-2\">\r\n              Your changes have been saved successfully. You can continue\r\n              working or close this dialog.\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"pt-2\">\r\n            <Button\r\n              onClick={() => setIsSuccessOpen(false)}\r\n              variant=\"default\"\r\n              className=\"bg-green-500 hover:bg-green-600\"\r\n            >\r\n              Continue\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n\r\n      {/* Task Completion Modal */}\r\n      <Modal\r\n        isOpen={isCompletionOpen}\r\n        onClose={() => setIsCompletionOpen(false)}\r\n        size=\"md\"\r\n      >\r\n        <div className=\"text-center space-y-6\">\r\n          <div className=\"mx-auto flex items-center justify-center h-20 w-20 rounded-full bg-blue-100 dark:bg-blue-900/30\">\r\n            <svg\r\n              className=\"h-10 w-10 text-blue-600 dark:text-blue-400\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              strokeWidth=\"2\"\r\n              stroke=\"currentColor\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                d=\"M11.35 3.836c-.065.21-.1.433-.1.664 0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75 2.25 2.25 0 00-.1-.664m-5.8 0A2.251 2.251 0 0113.5 2.25H15c1.012 0 1.867.668 2.15 1.586m-5.8 0c-.376.023-.75.05-1.124.08C9.095 4.01 8.25 4.973 8.25 6.108V8.25m8.25-4.875c.376.023.75.05 1.124.08 1.131.094 1.976 1.057 1.976 2.192V16.5A2.25 2.25 0 0117.25 18.75h-10.5A2.25 2.25 0 014.5 16.5V6.108c0-1.135.845-2.098 1.976-2.192.374-.03.748-.057 1.124-.08M15 12.75a3 3 0 11-6 0 3 3 0 016 0zm-3 2.25a.75.75 0 100-1.5.75.75 0 000 1.5z\"\r\n              />\r\n            </svg>\r\n          </div>\r\n\r\n          <div>\r\n            <h3 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">\r\n              Task Completed!\r\n            </h3>\r\n            <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-2\">\r\n              You have successfully completed the onboarding process. Welcome to\r\n              our platform!\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-4\">\r\n            <h4 className=\"text-sm font-medium text-blue-800 dark:text-blue-200 mb-2\">\r\n              What&apos;s Next?\r\n            </h4>\r\n            <ul className=\"text-sm text-blue-700 dark:text-blue-300 space-y-1 text-left\">\r\n              <li>• Explore your dashboard</li>\r\n              <li>• Set up your profile</li>\r\n              <li>• Connect with team members</li>\r\n              <li>• Start your first project</li>\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"flex justify-center space-x-3\">\r\n            <Button\r\n              onClick={() => setIsCompletionOpen(false)}\r\n              variant=\"secondary\"\r\n            >\r\n              Later\r\n            </Button>\r\n            <Button\r\n              onClick={() => setIsCompletionOpen(false)}\r\n              variant=\"default\"\r\n            >\r\n              Get Started\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n\r\n      {/* Achievement Modal */}\r\n      <Modal\r\n        isOpen={isAchievementOpen}\r\n        onClose={() => setIsAchievementOpen(false)}\r\n        size=\"md\"\r\n      >\r\n        <div className=\"text-center space-y-6\">\r\n          <div className=\"relative\">\r\n            <div className=\"mx-auto flex items-center justify-center h-24 w-24 rounded-full bg-gradient-to-r from-purple-400 to-pink-400 animate-pulse\">\r\n              <svg\r\n                className=\"h-12 w-12 text-white\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                strokeWidth=\"2\"\r\n                stroke=\"currentColor\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  d=\"M16.5 18.75h-9m9 0a3 3 0 013 3h-15a3 3 0 013-3m9 0v-3.375c0-.621-.503-1.125-1.125-1.125h-.871M7.5 18.75v-3.375c0-.621.504-1.125 1.125-1.125h.872m5.007 0H9.497m5.007 0a7.454 7.454 0 01-.982-3.172M9.497 14.25a7.454 7.454 0 00.981-3.172M5.25 4.236c-.982.143-1.954.317-2.916.52A6.003 6.003 0 007.73 9.728M5.25 4.236V4.5c0 2.108.966 3.99 2.48 5.228M5.25 4.236V2.721C7.456 2.41 9.71 2.25 12 2.25c2.291 0 4.545.16 6.75.47v1.516M7.73 9.728a6.726 6.726 0 002.748 1.35m8.272-6.842V4.5c0 2.108-.966 3.99-2.48 5.228m2.48-5.228a25.014 25.014 0 004.244.247C20.058 4.764 19.156 4.9 18 5.08m0 0V9.25c0 .621-.504 1.125-1.125 1.125M18 5.08a25.014 25.014 0 01-4.244.247A25.014 25.014 0 0112 5.25M7.73 9.728V9.25c0-.621.504-1.125 1.125-1.125M9.497 14.25H12m-2.503 0a7.454 7.454 0 01-.982-3.172M12 14.25a7.454 7.454 0 01-.981-3.172\"\r\n                />\r\n              </svg>\r\n            </div>\r\n            <div className=\"absolute -top-2 -right-2\">\r\n              <div className=\"flex items-center justify-center h-8 w-8 rounded-full bg-yellow-400 text-white text-xs font-bold\">\r\n                🎉\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <h3 className=\"text-xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-purple-600 to-pink-600 dark:from-purple-400 dark:to-pink-400\">\r\n              Achievement Unlocked!\r\n            </h3>\r\n            <h4 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mt-1\">\r\n              First Modal Master\r\n            </h4>\r\n            <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-2\">\r\n              Congratulations! You&apos;ve successfully opened your first modal\r\n              component. You&apos;re on your way to becoming a UI master!\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"bg-gradient-to-r from-purple-50 to-pink-50 dark:from-purple-900/20 dark:to-pink-900/20 border border-purple-200 dark:border-purple-800 rounded-lg p-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"text-left\">\r\n                <h5 className=\"text-sm font-medium text-purple-800 dark:text-purple-200\">\r\n                  Progress\r\n                </h5>\r\n                <p className=\"text-xs text-purple-600 dark:text-purple-300\">\r\n                  Next: Open 10 different modals\r\n                </p>\r\n              </div>\r\n              <div className=\"text-right\">\r\n                <div className=\"text-lg font-bold text-purple-600 dark:text-purple-400\">\r\n                  +50 XP\r\n                </div>\r\n                <div className=\"text-xs text-purple-500 dark:text-purple-400\">\r\n                  Level 1\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-3\">\r\n              <div className=\"bg-purple-200 dark:bg-purple-800 rounded-full h-2\">\r\n                <div\r\n                  className=\"bg-purple-500 h-2 rounded-full\"\r\n                  style={{ width: \"25%\" }}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <Button\r\n              onClick={() => setIsAchievementOpen(false)}\r\n              variant=\"default\"\r\n              className=\"bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 transform hover:scale-105\"\r\n              size=\"lg\"\r\n            >\r\n              Awesome!\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuccessModalView;\r\n",
      "type": "registry:ui"
    }
  ]
}