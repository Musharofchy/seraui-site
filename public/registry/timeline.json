{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "timeline",
  "title": "Timeline",
  "description": "A minimalistic timeline component designed with React and Tailwind CSS.",
  "author": "Reche Soares",
  "type": "registry:ui",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "cssVars": {
    "dark": {},
    "light": {}
  },
  "files": [
    {
      "path": "timeline.tsx",
      "content": "\"use client\";\n\nimport React, { memo, useCallback, useState } from \"react\";\n\n// Helper components to make this example self-contained.\n// In a real app, import icons from 'lucide-react' and your Badge from your UI library.\nconst ChevronDown = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"m6 9 6 6 6-6\"/></svg>\n);\nconst ChevronUp = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"m18 15-6-6-6 6\"/></svg>\n);\nconst Code = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"m16 18 6-6-6-6\"/><path d=\"m8 6-6 6 6 6\"/></svg>\n);\nconst Palette = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><circle cx=\"13.5\" cy=\"6.5\" r=\".5\" fill=\"currentColor\"/><circle cx=\"17.5\" cy=\"10.5\" r=\".5\" fill=\"currentColor\"/><circle cx=\"8.5\" cy=\"7.5\" r=\".5\" fill=\"currentColor\"/><circle cx=\"6.5\" cy=\"12.5\" r=\".5\" fill=\"currentColor\"/><path d=\"M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10c.926 0 1.648-.746 1.648-1.688 0-.437-.18-.835-.437-1.125-.29-.289-.438-.652-.438-1.125a1.64 1.64 0 0 1 1.668-1.668h1.996c3.051 0 5.555-2.503 5.555-5.554C21.965 6.012 17.461 2 12 2z\"/></svg>\n);\nconst Badge = ({ children, className = \"\", ...props }: React.HTMLAttributes<HTMLSpanElement>) => (\n  <span className={`inline-flex items-center rounded-md px-2.5 py-0.5 text-xs font-semibold ${className}`} {...props}>\n    {children}\n  </span>\n);\n\n// --- TYPES ---\ntype IconType = React.ComponentType<React.SVGProps<SVGSVGElement>>;\n\ninterface TimelineItemData {\n  id: string;\n  title: string;\n  type: string;\n  duration: string;\n  icon: IconType;\n  responsibilities: string[];\n  skills: string[];\n}\n\ntype ExpandMode = \"multi\" | \"single\";\n\ninterface ProfessionalTimelineProps {\n  data: TimelineItemData[];\n  defaultExpandedIds?: string[]; // defaults to all items expanded\n  expandMode?: ExpandMode;       // \"multi\" | \"single\" (default: \"multi\")\n}\n\n// --- MOCK DATA ---\nconst timelineData: TimelineItemData[] = [\n  {\n    id: \"timeline-item-1\",\n    title: \"Senior Frontend Developer\",\n    type: \"Full-time\",\n    duration: \"10.2022—Present\",\n    icon: Code,\n    responsibilities: [\n      \"Lead development of complex React applications with TypeScript.\",\n      \"Architect scalable frontend solutions using Next.js and modern tooling.\",\n      \"Mentor junior developers and conduct code reviews.\",\n      \"Collaborate with design and backend teams to deliver high-quality products.\",\n    ],\n    skills: [\"React\", \"TypeScript\", \"Next.js\", \"Tailwind CSS\", \"GraphQL\"],\n  },\n  {\n    id: \"timeline-item-2\",\n    title: \"UI Design Lead\",\n    type: \"Full-time\",\n    duration: \"10.2022—Present\",\n    icon: Palette,\n    responsibilities: [\n      \"Ensure UI/UX consistency and high-quality standards.\",\n      \"Design intuitive, user-focused interfaces aligned with business goals.\",\n      \"Define and establish a cohesive UI style for the company.\",\n    ],\n    skills: [\"Creativity\", \"UI/UX Design\", \"Figma\"],\n  },\n  {\n    id: \"timeline-item-3\",\n    title: \"Frontend Developer\",\n    type: \"Full-time\",\n    duration: \"03.2021—09.2022\",\n    icon: Code,\n    responsibilities: [\n      \"Developed responsive web applications using React and Vue.js.\",\n      \"Implemented pixel-perfect designs from Figma mockups.\",\n      \"Optimized application performance and user experience.\",\n      \"Collaborated in an agile development environment.\",\n    ],\n    skills: [\"React\", \"Vue.js\", \"JavaScript\", \"CSS\", \"HTML\"],\n  },\n];\n\n// --- COMPONENTS ---\ninterface TimelineItemContentProps {\n  item: TimelineItemData;\n}\n\nconst TimelineItemContent = memo(function TimelineItemContent({ item }: TimelineItemContentProps) {\n  return (\n    <div className=\"mt-6 space-y-4\">\n      {/* Responsibilities */}\n      <ul className=\"space-y-3\">\n        {item.responsibilities.map((responsibility, idx) => (\n          <li\n            key={`${item.id}-resp-${idx}`}\n            className=\"flex items-start gap-3 text-sm text-slate-600 dark:text-slate-400\"\n          >\n            <span className=\"w-1.5 h-1.5 bg-blue-500 rounded-full mt-2 flex-shrink-0\" />\n            <span className=\"leading-relaxed\">{responsibility}</span>\n          </li>\n        ))}\n      </ul>\n\n      {/* Skills */}\n      <div className=\"flex flex-wrap gap-2 pt-2\">\n        {item.skills.map((skill, skillIdx) => (\n          <Badge\n            key={`${item.id}-skill-${skillIdx}`}\n            className=\"bg-slate-100 text-slate-700 dark:bg-gray-800 dark:text-slate-300 hover:bg-slate-200 dark:hover:bg-gray-700 transition-colors px-3 py-1\"\n          >\n            {skill}\n          </Badge>\n        ))}\n      </div>\n    </div>\n  );\n});\nTimelineItemContent.displayName = \"TimelineItemContent\";\n\ninterface TimelineItemProps {\n  item: TimelineItemData;\n  expanded: boolean;\n  onToggle: (id: string) => void;\n}\n\nconst TimelineItem = memo(function TimelineItem({\n  item,\n  expanded,\n  onToggle,\n}: TimelineItemProps) {\n  const Icon = item.icon;\n  const headerId = `timeline-header-${item.id}`;\n  const contentId = `timeline-content-${item.id}`;\n\n  return (\n    <li className=\"relative\">\n      {/* Timeline marker with icon */}\n      <div className=\"absolute left-1 top-5 w-6 h-6 bg-slate-400 dark:bg-slate-500 rounded-full border-2 border-white dark:border-black flex items-center justify-center\">\n        <Icon className=\"w-3.5 h-3.5 text-white dark:text-black\" />\n      </div>\n\n      {/* Card */}\n      <div className=\"ml-14 pb-8\">\n        <div className=\"bg-white/50 dark:bg-gray-950 rounded-lg p-4 border border-slate-200/80 dark:border-gray-800/50 transition-all duration-200\">\n          <button\n            id={headerId}\n            className=\"w-full text-left group cursor-pointer\"\n            onClick={() => onToggle(item.id)}\n            aria-expanded={expanded}\n            aria-controls={contentId}\n          >\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h3 className=\"text-lg font-semibold text-slate-800 dark:text-slate-100 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors\">\n                  {item.title}\n                </h3>\n                <div className=\"flex items-center gap-2 text-sm text-slate-500 dark:text-slate-400 mt-1\">\n                  <span>{item.type}</span>\n                  <span aria-hidden>•</span>\n                  <span>{item.duration}</span>\n                </div>\n              </div>\n\n              <div className=\"text-slate-500 dark:text-slate-400 group-hover:text-slate-700 dark:group-hover:text-slate-200 transition-colors\">\n                {expanded ? <ChevronUp className=\"w-5 h-5\" /> : <ChevronDown className=\"w-5 h-5\" />}\n              </div>\n            </div>\n          </button>\n\n          {expanded && (\n            <div id={contentId} role=\"region\" aria-labelledby={headerId}>\n              <TimelineItemContent item={item} />\n            </div>\n          )}\n        </div>\n      </div>\n    </li>\n  );\n});\nTimelineItem.displayName = \"TimelineItem\";\n\n// --- MAIN TIMELINE ---\nexport function ProfessionalTimeline({\n  data,\n  defaultExpandedIds,\n  expandMode = \"multi\",\n}: ProfessionalTimelineProps) {\n  const initial = defaultExpandedIds ?? data.map((d) => d.id);\n  const [expanded, setExpanded] = useState<Set<string>>(() => new Set(initial));\n\n  const onToggle = useCallback(\n    (id: string) => {\n      setExpanded((prev) => {\n        const next = new Set(prev);\n        if (expandMode === \"single\") {\n          return prev.has(id) ? new Set() : new Set([id]);\n        }\n        if (next.has(id)) {\n          next.delete(id);\n        } else {\n          next.add(id);\n        }\n        return next;\n      });\n    },\n    [expandMode]\n  );\n\n  return (\n    <ol className=\"relative\">\n      {/* Vertical timeline line */}\n      <div className=\"absolute left-4 top-0 bottom-0 w-px bg-slate-300 dark:bg-gray-800\" aria-hidden />\n\n      {data.map((item) => (\n        <TimelineItem\n          key={item.id}\n          item={item}\n          expanded={expanded.has(item.id)}\n          onToggle={onToggle}\n        />\n      ))}\n    </ol>\n  );\n}\n\n// --- APP ENTRY POINT ---\nexport default function TimelinePage() {\n  return (\n    <div className=\"bg-white dark:bg-black min-h-screen p-4 sm:p-8 transition-colors duration-300\">\n      <div className=\"max-w-3xl mx-auto\">\n        <header className=\"flex justify-between items-center mb-8\">\n          <h1 className=\"text-3xl font-bold text-slate-800 dark:text-slate-100\">Professional Experience</h1>\n        </header>\n\n        {/* Set expandMode=\"single\" for accordion behavior */}\n        <ProfessionalTimeline data={timelineData} expandMode=\"multi\" />\n      </div>\n    </div>\n  );\n}",
      "type": "registry:ui"
    },
    {
      "path": "timeline2.tsx",
      "content": "\"use client\";\n\nimport React, { memo, useCallback, useState } from \"react\";\n\n// Helper components with refined icons\nconst ChevronDown = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    {...props}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"m6 9 6 6 6-6\" />\n  </svg>\n);\n\nconst Code = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    {...props}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"m16 18 6-6-6-6\" />\n    <path d=\"m8 6-6 6 6 6\" />\n  </svg>\n);\nconst Palette = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    {...props}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <circle cx=\"13.5\" cy=\"6.5\" r=\".5\" fill=\"currentColor\" />\n    <circle cx=\"17.5\" cy=\"10.5\" r=\".5\" fill=\"currentColor\" />\n    <circle cx=\"8.5\" cy=\"7.5\" r=\".5\" fill=\"currentColor\" />\n    <circle cx=\"6.5\" cy=\"12.5\" r=\".5\" fill=\"currentColor\" />\n    <path d=\"M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10c.926 0 1.648-.746 1.648-1.688 0-.437-.18-.835-.437-1.125-.29-.289-.438-.652-.438-1.125a1.64 1.64 0 0 1 1.668-1.668h1.996c3.051 0 5.555-2.503 5.555-5.554C21.965 6.012 17.461 2 12 2z\" />\n  </svg>\n);\n\n// Shadcn-style Badge component\nconst Badge = ({\n  children,\n  className = \"\",\n  variant = \"default\",\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement> & {\n  variant?: \"default\" | \"secondary\" | \"outline\";\n}) => {\n  const variants = {\n    default:\n      \"bg-slate-900 text-slate-50 hover:bg-slate-900/90 dark:bg-slate-50 dark:text-slate-900 dark:hover:bg-slate-50/90\",\n    secondary:\n      \"bg-slate-100 text-slate-900 hover:bg-slate-100/80 dark:bg-slate-800 dark:text-slate-50 dark:hover:bg-slate-800/80\",\n    outline:\n      \"border border-slate-200 bg-transparent hover:bg-slate-100 dark:border-slate-800 dark:hover:bg-slate-800\",\n  };\n\n  return (\n    <span\n      className={`inline-flex items-center rounded-md px-2.5 py-0.5 text-xs font-semibold transition-colors ${variants[variant]} ${className}`}\n      {...props}\n    >\n      {children}\n    </span>\n  );\n};\n\n// --- TYPES ---\ntype IconType = React.ComponentType<React.SVGProps<SVGSVGElement>>;\n\ninterface TimelineItemData {\n  id: string;\n  title: string;\n  type: string;\n  duration: string;\n  icon: IconType;\n  responsibilities: string[];\n  skills: string[];\n}\n\ntype ExpandMode = \"multi\" | \"single\";\n\ninterface ProfessionalTimelineProps {\n  data: TimelineItemData[];\n  defaultExpandedIds?: string[];\n  expandMode?: ExpandMode;\n}\n\n// --- MOCK DATA ---\nconst timelineData: TimelineItemData[] = [\n  {\n    id: \"prof-exp-1\",\n    title: \"Senior Frontend Developer\",\n    type: \"Full-time\",\n    duration: \"10.2022—Present\",\n    icon: Code,\n    responsibilities: [\n      \"Lead development of complex React applications with TypeScript.\",\n      \"Architect scalable frontend solutions using Next.js and modern tooling.\",\n      \"Mentor junior developers and conduct code reviews.\",\n      \"Collaborate with design and backend teams to deliver high-quality products.\",\n    ],\n    skills: [\"React\", \"TypeScript\", \"Next.js\", \"Tailwind CSS\", \"GraphQL\"],\n  },\n  {\n    id: \"prof-exp-2\",\n    title: \"UI Design Lead\",\n    type: \"Full-time\",\n    duration: \"10.2022—Present\",\n    icon: Palette,\n    responsibilities: [\n      \"Ensure UI/UX consistency and high-quality standards.\",\n      \"Design intuitive, user-focused interfaces aligned with business goals.\",\n      \"Define and establish a cohesive UI style for the company.\",\n    ],\n    skills: [\"Creativity\", \"UI/UX Design\", \"Figma\"],\n  },\n  {\n    id: \"prof-exp-3\",\n    title: \"Frontend Developer\",\n    type: \"Full-time\",\n    duration: \"03.2021—09.2022\",\n    icon: Code,\n    responsibilities: [\n      \"Developed responsive web applications using React and Vue.js.\",\n      \"Implemented pixel-perfect designs from Figma mockups.\",\n      \"Optimized application performance and user experience.\",\n      \"Collaborated in an agile development environment.\",\n    ],\n    skills: [\"React\", \"Vue.js\", \"JavaScript\", \"CSS\", \"HTML\"],\n  },\n];\n\n// --- COMPONENTS ---\ninterface TimelineItemContentProps {\n  item: TimelineItemData;\n}\n\nconst TimelineItemContent = memo(function TimelineItemContent({\n  item,\n}: TimelineItemContentProps) {\n  return (\n    <div className=\"mt-6 space-y-6 animate-in slide-in-from-top-1 duration-200\">\n      {/* Responsibilities */}\n      <div className=\"space-y-3\">\n        {item.responsibilities.map((responsibility, idx) => (\n          <div\n            key={`${item.id}-resp-${idx}`}\n            className=\"flex items-start gap-3 group\"\n          >\n            <div className=\"w-1.5 h-1.5 bg-slate-400 rounded-full mt-2 flex-shrink-0 group-hover:bg-slate-600 dark:bg-slate-500 dark:group-hover:bg-slate-400 transition-colors duration-200\" />\n            <p className=\"text-sm text-slate-600 dark:text-slate-400 leading-relaxed\">\n              {responsibility}\n            </p>\n          </div>\n        ))}\n      </div>\n\n      {/* Skills */}\n      <div className=\"flex flex-wrap gap-2 pt-2 border-t border-slate-200 dark:border-slate-800\">\n        {item.skills.map((skill, skillIdx) => (\n          <Badge key={`${item.id}-skill-${skillIdx}`} variant=\"secondary\">\n            {skill}\n          </Badge>\n        ))}\n      </div>\n    </div>\n  );\n});\nTimelineItemContent.displayName = \"TimelineItemContent\";\n\ninterface TimelineItemProps {\n  item: TimelineItemData;\n  expanded: boolean;\n  onToggle: (id: string) => void;\n  index: number;\n}\n\nconst TimelineItem = memo(function TimelineItem({\n  item,\n  expanded,\n  onToggle,\n}: TimelineItemProps) {\n  const Icon = item.icon;\n  const headerId = `timeline-header-${item.id}`;\n  const contentId = `timeline-content-${item.id}`;\n\n  return (\n    <div className=\"relative group\">\n      {/* Connecting line with gradient - now always visible */}\n      <div className=\"absolute left-6 top-14 bottom-0 w-[2px] bg-gradient-to-b from-black via-gray-500 to-white dark:from-white dark:via-gray-400 dark:to-black\" />\n\n      {/* Timeline node */}\n      <div className=\"absolute left-4 top-6 w-4 h-4 bg-white dark:bg-slate-950 border-2 border-slate-300 dark:border-slate-700 rounded-full flex items-center justify-center transform transition-all duration-200 z-10\">\n        <div className=\"w-2 h-2 bg-slate-900 dark:bg-slate-50 rounded-full opacity-0 group-hover:opacity-100 transition-opacity duration-200\" />\n      </div>\n\n      {/* Main content card */}\n      <div className=\"ml-12 mb-8\">\n        <div\n          className={`\n          bg-white dark:bg-slate-950 \n          rounded-lg border border-slate-200 dark:border-slate-800 \n          transition-all duration-200\n          ${expanded ? \"shadow-sm\" : \"shadow-none hover:shadow-sm\"}\n        `}\n        >\n          {/* Header */}\n          <button\n            id={headerId}\n            className=\"w-full text-left p-6 group/button cursor-pointer hover:bg-slate-50/50 dark:hover:bg-slate-900/50 transition-colors duration-200 rounded-t-lg\"\n            onClick={() => onToggle(item.id)}\n            aria-expanded={expanded}\n            aria-controls={contentId}\n          >\n            <div className=\"flex items-start justify-between gap-4\">\n              <div className=\"space-y-2 flex-1\">\n                <div className=\"flex items-center gap-3\">\n                  <div className=\"p-2 bg-slate-100 dark:bg-slate-900 rounded-md\">\n                    <Icon className=\"w-4 h-4 text-slate-600 dark:text-slate-400\" />\n                  </div>\n                  <h3 className=\"text-base font-semibold text-slate-900 dark:text-slate-50\">\n                    {item.title}\n                  </h3>\n                </div>\n\n                <div className=\"flex items-center gap-3 ml-11\">\n                  <Badge variant=\"outline\" className=\"text-xs\">\n                    {item.type}\n                  </Badge>\n                  <span className=\"text-xs text-slate-500 dark:text-slate-400\">\n                    {item.duration}\n                  </span>\n                </div>\n              </div>\n\n              <div\n                className={`\n                text-slate-400 dark:text-slate-600 \n                transition-transform duration-200\n                ${expanded ? \"rotate-180\" : \"\"}\n              `}\n              >\n                <ChevronDown className=\"w-4 h-4\" />\n              </div>\n            </div>\n          </button>\n\n          {/* Expandable content */}\n          {expanded && (\n            <div\n              id={contentId}\n              role=\"region\"\n              aria-labelledby={headerId}\n              className=\"px-6 pb-6 border-t border-slate-100 dark:border-slate-900\"\n            >\n              <TimelineItemContent item={item} />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n});\nTimelineItem.displayName = \"TimelineItem\";\n\n// --- MAIN TIMELINE ---\nexport function ProfessionalTimeline({\n  data,\n  defaultExpandedIds,\n  expandMode = \"multi\",\n}: ProfessionalTimelineProps) {\n  const initial = defaultExpandedIds ?? data.map((item) => item.id);\n  const [expanded, setExpanded] = useState<Set<string>>(() => new Set(initial));\n\n  const onToggle = useCallback(\n    (id: string) => {\n      setExpanded((prev) => {\n        const next = new Set(prev);\n        if (expandMode === \"single\") {\n          return prev.has(id) ? new Set() : new Set([id]);\n        }\n        if (next.has(id)) {\n          next.delete(id);\n        } else {\n          next.add(id);\n        }\n        return next;\n      });\n    },\n    [expandMode]\n  );\n\n  return (\n    <div className=\"relative\">\n      {data.map((item, index) => (\n        <TimelineItem\n          key={item.id}\n          item={item}\n          expanded={expanded.has(item.id)}\n          onToggle={onToggle}\n          index={index}\n        />\n      ))}\n    </div>\n  );\n}\n\n// --- APP ENTRY POINT ---\nexport default function TimelinePage2() {\n  return (\n    <div className=\"transition-colors duration-300\">\n      <div className=\"max-w-3xl mx-auto px-4 sm:px-6 lg:px-8 py-16\">\n        <header className=\"mb-12\">\n          <h1 className=\"text-3xl font-bold tracking-tight text-slate-900 dark:text-slate-50 mb-3\">\n            Professional Experience\n          </h1>\n          <p className=\"text-slate-600 dark:text-slate-400 text-sm leading-relaxed\">\n            A comprehensive overview of my career journey and professional\n            achievements.\n          </p>\n        </header>\n\n        <ProfessionalTimeline data={timelineData} expandMode=\"multi\" />\n      </div>\n    </div>\n  );\n}",
      "type": "registry:ui"
    },
    {
      "path": "timeline3.tsx",
      "content": "\"use client\"\r\nimport type React from \"react\"\r\ninterface TimelineItem {\r\n  id: string\r\n  title: string\r\n  company: string\r\n  date: string\r\n  description: string\r\n}\r\n\r\ninterface TimelineProps {\r\n  data?: TimelineItem[]\r\n  className?: string\r\n}\r\n\r\nconst Card = ({ children, className = \"\" }: { children: React.ReactNode; className?: string }) => (\r\n  <div\r\n    className={`rounded-2xl bg-white p-12 text-sm leading-7 text-gray-700 shadow-lg shadow-black/5 dark:bg-gray-950 dark:text-gray-300 dark:shadow-white/5 ${className}`}\r\n  >\r\n    {children}\r\n  </div>\r\n)\r\n\r\nconst Badge = ({ children, className = \"\" }: { children: React.ReactNode; className?: string }) => (\r\n  <span\r\n    className={`inline-flex items-center rounded-full bg-sky-100 px-2.5 py-0.5 text-xs font-medium text-sky-800 dark:bg-sky-900/30 dark:text-sky-300 ${className}`}\r\n  >\r\n    {children}\r\n  </span>\r\n)\r\n\r\nconst defaultTimelineData: TimelineItem[] = [\r\n  {\r\n    id: \"1\",\r\n    title: \"Senior Full Stack Developer\",\r\n    company: \"TechCorp Solutions\",\r\n    date: \"2023 - Present\",\r\n    description: \"Led development team, implemented CI/CD pipelines, reduced deployment time by 60%.\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    title: \"Full Stack Developer\",\r\n    company: \"StartupXYZ\",\r\n    date: \"2021 - 2023\",\r\n    description:\r\n      \"Developed client projects using modern web technologies and collaborated with cross-functional teams.\",\r\n  },\r\n  {\r\n    id: \"3\",\r\n    title: \"E-Commerce Platform\",\r\n    company: \"Personal Project\",\r\n    date: \"2022\",\r\n    description: \"Built complete e-commerce solution with 99.9% uptime handling 10k+ daily transactions.\",\r\n  },\r\n  {\r\n    id: \"4\",\r\n    title: \"Computer Science Degree\",\r\n    company: \"University of Technology\",\r\n    date: \"2017 - 2021\",\r\n    description: \"Bachelor of Science, Magna Cum Laude with 3.8 GPA, focus on software engineering.\",\r\n  },\r\n]\r\n\r\nexport default function TimelinePage3({ data = defaultTimelineData, className = \"\" }: TimelineProps) {\r\n  return (\r\n    <div\r\n      className={`relative grid min-h-screen grid-cols-[1fr_2.5rem_auto_2.5rem_1fr] grid-rows-[1fr_1px_auto_1px_1fr] bg-white [--pattern-fg:rgb(3_7_18_/_0.05)] dark:bg-gray-950 dark:[--pattern-fg:rgb(255_255_255_/_0.1)] ${className}`}\r\n    >\r\n      <div className=\"col-start-3 row-start-3 flex max-w-2xl flex-col bg-gray-100 p-2 dark:bg-white/10\">\r\n        <Card>\r\n          <h1 className=\"text-3xl font-bold text-gray-950 dark:text-white mb-12 tracking-tight\">\r\n            Professional Timeline\r\n          </h1>\r\n\r\n          <div className=\"space-y-10\">\r\n            {data.map((item, index) => (\r\n              <div key={item.id} className=\"relative group transition-all duration-300 hover:translate-x-1\">\r\n                {index !== data.length - 1 && (\r\n                  <div className=\"absolute left-3 top-8 h-full w-0.5 bg-gradient-to-b from-black via-gray-400 to-white opacity-60 group-hover:opacity-100 transition-opacity duration-300\" />\r\n                )}\r\n                <div className=\"flex gap-6\">\r\n                  <div className=\"relative z-10 flex h-6 w-6 shrink-0 items-center justify-center rounded-full bg-gradient-to-br from-sky-400 to-sky-600 mt-1 shadow-md group-hover:scale-110 transition-transform duration-300\">\r\n                    <div className=\"h-2.5 w-2.5 rounded-full bg-white shadow-sm\" />\r\n                  </div>\r\n                  <div className=\"flex-1 space-y-3 group-hover:text-gray-900 dark:group-hover:text-white transition-colors duration-300\">\r\n                    <div className=\"space-y-1\">\r\n                      <h3 className=\"font-semibold text-lg text-gray-950 dark:text-white group-hover:text-sky-700 dark:group-hover:text-sky-300 transition-colors duration-300\">\r\n                        {item.title}\r\n                      </h3>\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <p className=\"text-sky-600 dark:text-sky-400 font-medium\">{item.company}</p>\r\n                        <Badge>{item.date}</Badge>\r\n                      </div>\r\n                    </div>\r\n                    <p className=\"text-gray-600 dark:text-gray-300 leading-relaxed group-hover:bg-gray-50 dark:group-hover:bg-gray-800/30 rounded-lg p-3 -m-3 transition-all duration-300\">\r\n                      {item.description}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Pattern borders */}\r\n      <div className=\"relative -right-px col-start-2 row-span-full row-start-1 border-x border-x-[var(--pattern-fg)] bg-[image:repeating-linear-gradient(315deg,_var(--pattern-fg)_0,_var(--pattern-fg)_1px,_transparent_0,_transparent_50%)] bg-[size:10px_10px] bg-fixed\"></div>\r\n      <div className=\"relative -left-px col-start-4 row-span-full row-start-1 border-x border-x-[var(--pattern-fg)] bg-[image:repeating-linear-gradient(315deg,_var(--pattern-fg)_0,_var(--pattern-fg)_1px,_transparent_0,_transparent_50%)] bg-[size:10px_10px] bg-fixed\"></div>\r\n      <div className=\"relative -bottom-px col-span-full col-start-1 row-start-2 h-px bg-[var(--pattern-fg)]\"></div>\r\n      <div className=\"relative -top-px col-span-full col-start-1 row-start-4 h-px bg-[var(--pattern-fg)]\"></div>\r\n    </div>\r\n  )\r\n}\r\n",
      "type": "registry:ui"
    }
  ]
}